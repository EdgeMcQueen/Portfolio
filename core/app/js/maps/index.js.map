{"version":3,"sources":["libs.js","main.js"],"names":["factory","define","amd","module","exports","$","require","jQuery","CircleProgress","config","init","prototype","value","size","startAngle","Math","PI","thickness","fill","gradient","emptyFill","animation","duration","easing","animationStartValue","reverse","lineCap","insertMode","constructor","el","canvas","ctx","radius","arcFill","lastFrameValue","extend","initWidget","initFill","draw","trigger","width","height","getContext","window","devicePixelRatio","scaleBy","style","scale","self","Error","color","gr","length","ga","gradientAngle","gd","gradientDirection","cos","sin","lg","createLinearGradient","apply","i","pos","isArray","addColorStop","image","img","Image","src","complete","setImageFill","onload","bg","drawImage","createPattern","drawFrame","drawAnimated","v","clearRect","drawEmptyArc","drawArc","r","t","getThickness","a","save","beginPath","arc","lineWidth","strokeStyle","stroke","restore","stop","css","animationProgress","animate","step","stepValue","promise","always","isNumeric","getValue","setValue","newValue","circleProgress","defaults","circleProgressEasing","x","fn","configOrCommand","commandArgument","dataName","firstInstance","data","arguments","each","instance","isPlainObject","initialConfig","JSON","parse","document","version","options","html5","reSkip","saveClones","supportsHtml5Styles","expando","expanID","expandoData","supportsUnknownElements","createElement","innerHTML","childNodes","frag","createDocumentFragment","cloneNode","e","addStyleSheet","ownerDocument","cssText","p","parent","getElementsByTagName","documentElement","insertBefore","lastChild","firstChild","getElements","elements","split","addElements","newElements","join","shivDocument","getExpandoData","nodeName","node","cache","test","createElem","canHaveChildren","tagUrn","appendChild","clone","elems","l","shivMethods","createFrag","Function","replace","shivCSS","hasCSS","type","allowPageScroll","swipe","swipeStatus","NONE","click","tap","$this","plugin","PLUGIN_NS","TouchSwipe","element","touchStart","jqEvent","getTouchInProgress","target","closest","excludedElements","$element","event","originalEvent","pointerType","fallbackToMouseEvents","ret","touches","evt","phase","PHASE_START","fingerCount","preventDefaultEvents","preventDefault","distance","direction","currentDirection","pinchDirection","startTouchesDistance","endTouchesDistance","pinchZoom","pinchDistance","maximumsMap","createMaximumsData","cancelMultiFingerRelease","createFingerData","fingers","ALL_FINGERS","hasPinches","startTime","getTimeStamp","calculateTouchesDistance","fingerData","start","pinchStatus","triggerHandler","PHASE_CANCEL","hold","holdTimeout","setTimeout","proxy","call","longTapThreshold","setTouchInProgress","touchMove","PHASE_END","inMultiFingerRelease","currentFinger","updateFingerData","endTime","clearTimeout","PHASE_MOVE","end","calculatePinchDirection","calculatePinchZoom","abs","calculateDirection","last","validateDefaultEvent","calculateDistance","calculateDuration","setMaxDistance","triggerOnTouchEnd","triggerOnTouchLeave","inBounds","bounds","getbounds","isInBounds","getNextPhase","touchEnd","startMultiFingerRelease","fingerCountAtRelease","didSwipeBackToCancel","validateSwipeDistance","cancelable","hasTap","triggerHandlerForGesture","TAP","touchCancel","touchLeave","removeListeners","unbind","START_EV","CANCEL_EV","MOVE_EV","END_EV","LEAVE_EV","currentPhase","nextPhase","validTime","validateSwipeTime","validDistance","didCancel","didSwipe","hasSwipes","SWIPE","didPinch","PINCH","didDoubleTap","DOUBLE_TAP","didLongTap","LONG_TAP","didTap","gesture","validateSwipe","singleTapTimeout","LEFT","swipeLeft","RIGHT","swipeRight","UP","swipeUp","DOWN","swipeDown","validatePinch","IN","pinchIn","OUT","pinchOut","hasDoubleTap","inDoubleTap","doubleTapStartTime","doubleTapThreshold","doubleTap","longTap","valid","threshold","cancelled","cancelThreshold","getMaxDistance","validatePinchDistance","pinchThreshold","result","maxTimeThreshold","auto","AUTO","HORIZONTAL","VERTICAL","hasCorrectFingerCount","validateFingers","hasEndPoint","validateEndPoint","hasCorrectDistance","hasValidTime","hasValidDistance","SUPPORTS_TOUCH","hasLongTap","validateDoubleTap","now","validateTap","isNaN","validateLongTap","DOUBLE_TAP_THRESHOLD","previousTouchEndTime","withinThreshold","diff","fingerReleaseThreshold","val","bind","id","f","y","pageX","clientX","pageY","clientY","identifier","getFingerData","max","maxData","createMaximumVO","dir","startPoint","endPoint","diffX","diffY","round","sqrt","startDistance","endDistance","percent","toFixed","pow","calculateAngle","atan2","angle","comparePoints","Date","getTime","offset","left","right","outerWidth","top","bottom","outerHeight","point","pointA","pointB","useTouchEvents","SUPPORTS_POINTER","SUPPORTS_POINTER_IE10","error","enable","disable","destroy","option","property","VERSION","navigator","msPointerEnabled","pointerEnabled","method","Array","slice","phases","directions","pageScroll","ONE","TWO","THREE","FOUR","FIVE","ALL","on","scrollTop","attr","$burgerContainer","$burgerIcon","$burgerMenu","toggleClass","hasClass","addClass","removeClass","$dropMenuIcon","$dropMenu","scroll","scrollFunction","display","ready","circle","progress","find","text","String","substr"],"mappings":"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","file":"../index.js","sourcesContent":["/**\n * jquery-circle-progress - jQuery Plugin to draw animated circular progress bars:\n * {@link http://kottenator.github.io/jquery-circle-progress/}\n *\n * @author Rostyslav Bryzgunov <kottenator@gmail.com>\n * @version 1.2.2\n * @licence MIT\n * @preserve\n */\n// UMD factory - https://github.com/umdjs/umd/blob/d31bb6ee7098715e019f52bdfe27b3e4bfd2b97e/templates/jqueryPlugin.js\n// Uses AMD, CommonJS or browser globals to create a jQuery plugin.\n(function (factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD - register as an anonymous module\n    define([\"jquery\"], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    // Node/CommonJS\n    var $ = require(\"jquery\");\n    factory($);\n    module.exports = $;\n  } else {\n    // Browser globals\n    factory(jQuery);\n  }\n})(function ($) {\n  /**\n   * Inner implementation of the circle progress bar.\n   * The class is not exposed _yet_ but you can create an instance through jQuery method call.\n   *\n   * @param {object} config - You can customize any class member (property or method).\n   * @class\n   * @alias CircleProgress\n   */\n  function CircleProgress(config) {\n    this.init(config);\n  }\n\n  CircleProgress.prototype = {\n    //--------------------------------------- public options ---------------------------------------\n    /**\n     * This is the only required option. It should be from `0.0` to `1.0`.\n     * @type {number}\n     * @default 0.0\n     */\n    value: 0.0,\n\n    /**\n     * Size of the canvas in pixels.\n     * It's a square so we need only one dimension.\n     * @type {number}\n     * @default 100.0\n     */\n    size: 100.0,\n\n    /**\n     * Initial angle for `0.0` value in radians.\n     * @type {number}\n     * @default -Math.PI\n     */\n    startAngle: -Math.PI,\n\n    /**\n     * Width of the arc in pixels.\n     * If it's `'auto'` - the value is calculated as `[this.size]{@link CircleProgress#size} / 14`.\n     * @type {number|string}\n     * @default 'auto'\n     */\n    thickness: \"auto\",\n\n    /**\n     * Fill of the arc. You may set it to:\n     *\n     *   - solid color:\n     *     - `'#3aeabb'`\n     *     - `{ color: '#3aeabb' }`\n     *     - `{ color: 'rgba(255, 255, 255, .3)' }`\n     *   - linear gradient _(left to right)_:\n     *     - `{ gradient: ['#3aeabb', '#fdd250'], gradientAngle: Math.PI / 4 }`\n     *     - `{ gradient: ['red', 'green', 'blue'], gradientDirection: [x0, y0, x1, y1] }`\n     *     - `{ gradient: [[\"red\", .2], [\"green\", .3], [\"blue\", .8]] }`\n     *   - image:\n     *     - `{ image: 'http://i.imgur.com/pT0i89v.png' }`\n     *     - `{ image: imageObject }`\n     *     - `{ color: 'lime', image: 'http://i.imgur.com/pT0i89v.png' }` -\n     *       color displayed until the image is loaded\n     *\n     * @default {gradient: ['#3aeabb', '#fdd250']}\n     */\n    fill: {\n      gradient: [\"#3aeabb\", \"#fdd250\"]\n    },\n\n    /**\n     * Color of the \"empty\" arc. Only a color fill supported by now.\n     * @type {string}\n     * @default 'rgba(0, 0, 0, .1)'\n     */\n    emptyFill: \"rgba(0, 0, 0, .1)\",\n\n    /**\n     * jQuery Animation config.\n     * You can pass `false` to disable the animation.\n     * @see http://api.jquery.com/animate/\n     * @type {object|boolean}\n     * @default {duration: 1200, easing: 'circleProgressEasing'}\n     */\n    animation: {\n      duration: 1200,\n      easing: \"circleProgressEasing\"\n    },\n\n    /**\n     * Default animation starts at `0.0` and ends at specified `value`. Let's call this _direct animation_.\n     * If you want to make _reversed animation_ - set `animationStartValue: 1.0`.\n     * Also you may specify any other value from `0.0` to `1.0`.\n     * @type {number}\n     * @default 0.0\n     */\n    animationStartValue: 0.0,\n\n    /**\n     * Reverse animation and arc draw.\n     * By default, the arc is filled from `0.0` to `value`, _clockwise_.\n     * With `reverse: true` the arc is filled from `1.0` to `value`, _counter-clockwise_.\n     * @type {boolean}\n     * @default false\n     */\n    reverse: false,\n\n    /**\n     * Arc line cap: `'butt'`, `'round'` or `'square'` -\n     * [read more]{@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.lineCap}.\n     * @type {string}\n     * @default 'butt'\n     */\n    lineCap: \"butt\",\n\n    /**\n     * Canvas insertion mode: append or prepend it into the parent element?\n     * @type {string}\n     * @default 'prepend'\n     */\n    insertMode: \"prepend\",\n\n    //------------------------------ protected properties and methods ------------------------------\n    /**\n     * Link to {@link CircleProgress} constructor.\n     * @protected\n     */\n    constructor: CircleProgress,\n\n    /**\n     * Container element. Should be passed into constructor config.\n     * @protected\n     * @type {jQuery}\n     */\n    el: null,\n\n    /**\n     * Canvas element. Automatically generated and prepended to [this.el]{@link CircleProgress#el}.\n     * @protected\n     * @type {HTMLCanvasElement}\n     */\n    canvas: null,\n\n    /**\n     * 2D-context of [this.canvas]{@link CircleProgress#canvas}.\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    ctx: null,\n\n    /**\n     * Radius of the outer circle. Automatically calculated as `[this.size]{@link CircleProgress#size} / 2`.\n     * @protected\n     * @type {number}\n     */\n    radius: 0.0,\n\n    /**\n     * Fill of the main arc. Automatically calculated, depending on [this.fill]{@link CircleProgress#fill} option.\n     * @protected\n     * @type {string|CanvasGradient|CanvasPattern}\n     */\n    arcFill: null,\n\n    /**\n     * Last rendered frame value.\n     * @protected\n     * @type {number}\n     */\n    lastFrameValue: 0.0,\n\n    /**\n     * Init/re-init the widget.\n     *\n     * Throws a jQuery event:\n     *\n     * - `circle-inited(jqEvent)`\n     *\n     * @param {object} config - You can customize any class member (property or method).\n     */\n    init: function (config) {\n      $.extend(this, config);\n      this.radius = this.size / 2;\n      this.initWidget();\n      this.initFill();\n      this.draw();\n      this.el.trigger(\"circle-inited\");\n    },\n\n    /**\n     * Initialize `<canvas>`.\n     * @protected\n     */\n    initWidget: function () {\n      if (!this.canvas)\n        this.canvas = $(\"<canvas>\")[this.insertMode == \"prepend\" ? \"prependTo\" : \"appendTo\"](\n          this.el\n        )[0];\n\n      var canvas = this.canvas;\n      canvas.width = this.size;\n      canvas.height = this.size;\n      this.ctx = canvas.getContext(\"2d\");\n\n      if (window.devicePixelRatio > 1) {\n        var scaleBy = window.devicePixelRatio;\n        canvas.style.width = canvas.style.height = this.size + \"px\";\n        canvas.width = canvas.height = this.size * scaleBy;\n        this.ctx.scale(scaleBy, scaleBy);\n      }\n    },\n\n    /**\n     * This method sets [this.arcFill]{@link CircleProgress#arcFill}.\n     * It could do this async (on image load).\n     * @protected\n     */\n    initFill: function () {\n      var self = this,\n        fill = this.fill,\n        ctx = this.ctx,\n        size = this.size;\n\n      if (!fill) throw Error(\"The fill is not specified!\");\n\n      if (typeof fill == \"string\") fill = { color: fill };\n\n      if (fill.color) this.arcFill = fill.color;\n\n      if (fill.gradient) {\n        var gr = fill.gradient;\n\n        if (gr.length == 1) {\n          this.arcFill = gr[0];\n        } else if (gr.length > 1) {\n          var ga = fill.gradientAngle || 0, // gradient direction angle; 0 by default\n            gd = fill.gradientDirection || [\n              (size / 2) * (1 - Math.cos(ga)), // x0\n              (size / 2) * (1 + Math.sin(ga)), // y0\n              (size / 2) * (1 + Math.cos(ga)), // x1\n              (size / 2) * (1 - Math.sin(ga)) // y1\n            ];\n\n          var lg = ctx.createLinearGradient.apply(ctx, gd);\n\n          for (var i = 0; i < gr.length; i++) {\n            var color = gr[i],\n              pos = i / (gr.length - 1);\n\n            if ($.isArray(color)) {\n              pos = color[1];\n              color = color[0];\n            }\n\n            lg.addColorStop(pos, color);\n          }\n\n          this.arcFill = lg;\n        }\n      }\n\n      if (fill.image) {\n        var img;\n\n        if (fill.image instanceof Image) {\n          img = fill.image;\n        } else {\n          img = new Image();\n          img.src = fill.image;\n        }\n\n        if (img.complete) setImageFill();\n        else img.onload = setImageFill;\n      }\n\n      function setImageFill() {\n        var bg = $(\"<canvas>\")[0];\n        bg.width = self.size;\n        bg.height = self.size;\n        bg.getContext(\"2d\").drawImage(img, 0, 0, size, size);\n        self.arcFill = self.ctx.createPattern(bg, \"no-repeat\");\n        self.drawFrame(self.lastFrameValue);\n      }\n    },\n\n    /**\n     * Draw the circle.\n     * @protected\n     */\n    draw: function () {\n      if (this.animation) this.drawAnimated(this.value);\n      else this.drawFrame(this.value);\n    },\n\n    /**\n     * Draw a single animation frame.\n     * @protected\n     * @param {number} v - Frame value.\n     */\n    drawFrame: function (v) {\n      this.lastFrameValue = v;\n      this.ctx.clearRect(0, 0, this.size, this.size);\n      this.drawEmptyArc(v);\n      this.drawArc(v);\n    },\n\n    /**\n     * Draw the arc (part of the circle).\n     * @protected\n     * @param {number} v - Frame value.\n     */\n    drawArc: function (v) {\n      if (v === 0) return;\n\n      var ctx = this.ctx,\n        r = this.radius,\n        t = this.getThickness(),\n        a = this.startAngle;\n\n      ctx.save();\n      ctx.beginPath();\n\n      if (!this.reverse) {\n        ctx.arc(r, r, r - t / 2, a, a + Math.PI * 2 * v);\n      } else {\n        ctx.arc(r, r, r - t / 2, a - Math.PI * 2 * v, a);\n      }\n\n      ctx.lineWidth = t;\n      ctx.lineCap = this.lineCap;\n      ctx.strokeStyle = this.arcFill;\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Draw the _empty (background)_ arc (part of the circle).\n     * @protected\n     * @param {number} v - Frame value.\n     */\n    drawEmptyArc: function (v) {\n      var ctx = this.ctx,\n        r = this.radius,\n        t = this.getThickness(),\n        a = this.startAngle;\n\n      if (v < 1) {\n        ctx.save();\n        ctx.beginPath();\n\n        if (v <= 0) {\n          ctx.arc(r, r, r - t / 2, 0, Math.PI * 2);\n        } else {\n          if (!this.reverse) {\n            ctx.arc(r, r, r - t / 2, a + Math.PI * 2 * v, a);\n          } else {\n            ctx.arc(r, r, r - t / 2, a, a - Math.PI * 2 * v);\n          }\n        }\n\n        ctx.lineWidth = t;\n        ctx.strokeStyle = this.emptyFill;\n        ctx.stroke();\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Animate the progress bar.\n     *\n     * Throws 3 jQuery events:\n     *\n     * - `circle-animation-start(jqEvent)`\n     * - `circle-animation-progress(jqEvent, animationProgress, stepValue)` - multiple event\n     *   animationProgress: from `0.0` to `1.0`; stepValue: from `0.0` to `value`\n     * - `circle-animation-end(jqEvent)`\n     *\n     * @protected\n     * @param {number} v - Final value.\n     */\n    drawAnimated: function (v) {\n      var self = this,\n        el = this.el,\n        canvas = $(this.canvas);\n\n      // stop previous animation before new \"start\" event is triggered\n      canvas.stop(true, false);\n      el.trigger(\"circle-animation-start\");\n\n      canvas\n        .css({ animationProgress: 0 })\n        .animate(\n          { animationProgress: 1 },\n          $.extend({}, this.animation, {\n            step: function (animationProgress) {\n              var stepValue =\n                self.animationStartValue * (1 - animationProgress) + v * animationProgress;\n              self.drawFrame(stepValue);\n              el.trigger(\"circle-animation-progress\", [animationProgress, stepValue]);\n            }\n          })\n        )\n        .promise()\n        .always(function () {\n          // trigger on both successful & failure animation end\n          el.trigger(\"circle-animation-end\");\n        });\n    },\n\n    /**\n     * Get the circle thickness.\n     * @see CircleProgress#thickness\n     * @protected\n     * @returns {number}\n     */\n    getThickness: function () {\n      return $.isNumeric(this.thickness) ? this.thickness : this.size / 14;\n    },\n\n    /**\n     * Get current value.\n     * @protected\n     * @return {number}\n     */\n    getValue: function () {\n      return this.value;\n    },\n\n    /**\n     * Set current value (with smooth animation transition).\n     * @protected\n     * @param {number} newValue\n     */\n    setValue: function (newValue) {\n      if (this.animation) this.animationStartValue = this.lastFrameValue;\n      this.value = newValue;\n      this.draw();\n    }\n  };\n\n  //----------------------------------- Initiating jQuery plugin -----------------------------------\n  $.circleProgress = {\n    // Default options (you may override them)\n    defaults: CircleProgress.prototype\n  };\n\n  // ease-in-out-cubic\n  $.easing.circleProgressEasing = function (x) {\n    if (x < 0.5) {\n      x = 2 * x;\n      return 0.5 * x * x * x;\n    } else {\n      x = 2 - 2 * x;\n      return 1 - 0.5 * x * x * x;\n    }\n  };\n\n  /**\n   * Creates an instance of {@link CircleProgress}.\n   * Produces [init event]{@link CircleProgress#init} and [animation events]{@link CircleProgress#drawAnimated}.\n   *\n   * @param {object} [configOrCommand] - Config object or command name.\n   *\n   * Config example (you can specify any {@link CircleProgress} property):\n   *\n   * ```js\n   * { value: 0.75, size: 50, animation: false }\n   * ```\n   *\n   * Commands:\n   *\n   * ```js\n   * el.circleProgress('widget'); // get the <canvas>\n   * el.circleProgress('value'); // get the value\n   * el.circleProgress('value', newValue); // update the value\n   * el.circleProgress('redraw'); // redraw the circle\n   * el.circleProgress(); // the same as 'redraw'\n   * ```\n   *\n   * @param {string} [commandArgument] - Some commands (like `'value'`) may require an argument.\n   * @see CircleProgress\n   * @alias \"$(...).circleProgress\"\n   */\n  $.fn.circleProgress = function (configOrCommand, commandArgument) {\n    var dataName = \"circle-progress\",\n      firstInstance = this.data(dataName);\n\n    if (configOrCommand == \"widget\") {\n      if (!firstInstance)\n        throw Error('Calling \"widget\" method on not initialized instance is forbidden');\n      return firstInstance.canvas;\n    }\n\n    if (configOrCommand == \"value\") {\n      if (!firstInstance)\n        throw Error('Calling \"value\" method on not initialized instance is forbidden');\n      if (typeof commandArgument == \"undefined\") {\n        return firstInstance.getValue();\n      } else {\n        var newValue = arguments[1];\n        return this.each(function () {\n          $(this).data(dataName).setValue(newValue);\n        });\n      }\n    }\n\n    return this.each(function () {\n      var el = $(this),\n        instance = el.data(dataName),\n        config = $.isPlainObject(configOrCommand) ? configOrCommand : {};\n\n      if (instance) {\n        instance.init(config);\n      } else {\n        var initialConfig = $.extend({}, el.data());\n        if (typeof initialConfig.fill == \"string\")\n          initialConfig.fill = JSON.parse(initialConfig.fill);\n        if (typeof initialConfig.animation == \"string\")\n          initialConfig.animation = JSON.parse(initialConfig.animation);\n        config = $.extend(initialConfig, config);\n        config.el = el;\n        instance = new CircleProgress(config);\n        el.data(dataName, instance);\n      }\n    });\n  };\n});\n\n/**\n * @preserve HTML5 Shiv 3.7.3 | @afarkas @jdalton @jon_neal @rem | MIT/GPL2 Licensed\n */\n(function (window, document) {\n  /*jshint evil:true */\n  /** version */\n  var version = \"3.7.3\";\n\n  /** Preset options */\n  var options = window.html5 || {};\n\n  /** Used to skip problem elements */\n  var reSkip = /^<|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i;\n\n  /** Not all elements can be cloned in IE **/\n  var saveClones = /^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i;\n\n  /** Detect whether the browser supports default html5 styles */\n  var supportsHtml5Styles;\n\n  /** Name of the expando, to work with multiple documents or to re-shiv one document */\n  var expando = \"_html5shiv\";\n\n  /** The id for the the documents expando */\n  var expanID = 0;\n\n  /** Cached data for each document */\n  var expandoData = {};\n\n  /** Detect whether the browser supports unknown elements */\n  var supportsUnknownElements;\n\n  (function () {\n    try {\n      var a = document.createElement(\"a\");\n      a.innerHTML = \"<xyz></xyz>\";\n      //if the hidden property is implemented we can assume, that the browser supports basic HTML5 Styles\n      supportsHtml5Styles = \"hidden\" in a;\n\n      supportsUnknownElements =\n        a.childNodes.length == 1 ||\n        (function () {\n          // assign a false positive if unable to shiv\n          document.createElement(\"a\");\n          var frag = document.createDocumentFragment();\n          return (\n            typeof frag.cloneNode == \"undefined\" ||\n            typeof frag.createDocumentFragment == \"undefined\" ||\n            typeof frag.createElement == \"undefined\"\n          );\n        })();\n    } catch (e) {\n      // assign a false positive if detection fails => unable to shiv\n      supportsHtml5Styles = true;\n      supportsUnknownElements = true;\n    }\n  })();\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Creates a style sheet with the given CSS text and adds it to the document.\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @param {String} cssText The CSS text.\n   * @returns {StyleSheet} The style element.\n   */\n  function addStyleSheet(ownerDocument, cssText) {\n    var p = ownerDocument.createElement(\"p\"),\n      parent = ownerDocument.getElementsByTagName(\"head\")[0] || ownerDocument.documentElement;\n\n    p.innerHTML = \"x<style>\" + cssText + \"</style>\";\n    return parent.insertBefore(p.lastChild, parent.firstChild);\n  }\n\n  /**\n   * Returns the value of `html5.elements` as an array.\n   * @private\n   * @returns {Array} An array of shived element node names.\n   */\n  function getElements() {\n    var elements = html5.elements;\n    return typeof elements == \"string\" ? elements.split(\" \") : elements;\n  }\n\n  /**\n   * Extends the built-in list of html5 elements\n   * @memberOf html5\n   * @param {String|Array} newElements whitespace separated list or array of new element names to shiv\n   * @param {Document} ownerDocument The context document.\n   */\n  function addElements(newElements, ownerDocument) {\n    var elements = html5.elements;\n    if (typeof elements != \"string\") {\n      elements = elements.join(\" \");\n    }\n    if (typeof newElements != \"string\") {\n      newElements = newElements.join(\" \");\n    }\n    html5.elements = elements + \" \" + newElements;\n    shivDocument(ownerDocument);\n  }\n\n  /**\n   * Returns the data associated to the given document\n   * @private\n   * @param {Document} ownerDocument The document.\n   * @returns {Object} An object of data.\n   */\n  function getExpandoData(ownerDocument) {\n    var data = expandoData[ownerDocument[expando]];\n    if (!data) {\n      data = {};\n      expanID++;\n      ownerDocument[expando] = expanID;\n      expandoData[expanID] = data;\n    }\n    return data;\n  }\n\n  /**\n   * returns a shived element for the given nodeName and document\n   * @memberOf html5\n   * @param {String} nodeName name of the element\n   * @param {Document|DocumentFragment} ownerDocument The context document.\n   * @returns {Object} The shived element.\n   */\n  function createElement(nodeName, ownerDocument, data) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    if (supportsUnknownElements) {\n      return ownerDocument.createElement(nodeName);\n    }\n    if (!data) {\n      data = getExpandoData(ownerDocument);\n    }\n    var node;\n\n    if (data.cache[nodeName]) {\n      node = data.cache[nodeName].cloneNode();\n    } else if (saveClones.test(nodeName)) {\n      node = (data.cache[nodeName] = data.createElem(nodeName)).cloneNode();\n    } else {\n      node = data.createElem(nodeName);\n    }\n\n    // Avoid adding some elements to fragments in IE < 9 because\n    // * Attributes like `name` or `type` cannot be set/changed once an element\n    //   is inserted into a document/fragment\n    // * Link elements with `src` attributes that are inaccessible, as with\n    //   a 403 response, will cause the tab/window to crash\n    // * Script elements appended to fragments will execute when their `src`\n    //   or `text` property is set\n    return node.canHaveChildren && !reSkip.test(nodeName) && !node.tagUrn\n      ? data.frag.appendChild(node)\n      : node;\n  }\n\n  /**\n   * returns a shived DocumentFragment for the given document\n   * @memberOf html5\n   * @param {Document} ownerDocument The context document.\n   * @returns {Object} The shived DocumentFragment.\n   */\n  function createDocumentFragment(ownerDocument, data) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    if (supportsUnknownElements) {\n      return ownerDocument.createDocumentFragment();\n    }\n    data = data || getExpandoData(ownerDocument);\n    var clone = data.frag.cloneNode(),\n      i = 0,\n      elems = getElements(),\n      l = elems.length;\n    for (; i < l; i++) {\n      clone.createElement(elems[i]);\n    }\n    return clone;\n  }\n\n  /**\n   * Shivs the `createElement` and `createDocumentFragment` methods of the document.\n   * @private\n   * @param {Document|DocumentFragment} ownerDocument The document.\n   * @param {Object} data of the document.\n   */\n  function shivMethods(ownerDocument, data) {\n    if (!data.cache) {\n      data.cache = {};\n      data.createElem = ownerDocument.createElement;\n      data.createFrag = ownerDocument.createDocumentFragment;\n      data.frag = data.createFrag();\n    }\n\n    ownerDocument.createElement = function (nodeName) {\n      //abort shiv\n      if (!html5.shivMethods) {\n        return data.createElem(nodeName);\n      }\n      return createElement(nodeName, ownerDocument, data);\n    };\n\n    ownerDocument.createDocumentFragment = Function(\n      \"h,f\",\n      \"return function(){\" +\n        \"var n=f.cloneNode(),c=n.createElement;\" +\n        \"h.shivMethods&&(\" +\n        // unroll the `createElement` calls\n        getElements()\n          .join()\n          .replace(/[\\w\\-:]+/g, function (nodeName) {\n            data.createElem(nodeName);\n            data.frag.createElement(nodeName);\n            return 'c(\"' + nodeName + '\")';\n          }) +\n        \");return n}\"\n    )(html5, data.frag);\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Shivs the given document.\n   * @memberOf html5\n   * @param {Document} ownerDocument The document to shiv.\n   * @returns {Document} The shived document.\n   */\n  function shivDocument(ownerDocument) {\n    if (!ownerDocument) {\n      ownerDocument = document;\n    }\n    var data = getExpandoData(ownerDocument);\n\n    if (html5.shivCSS && !supportsHtml5Styles && !data.hasCSS) {\n      data.hasCSS = !!addStyleSheet(\n        ownerDocument,\n        // corrects block display not defined in IE6/7/8/9\n        \"article,aside,dialog,figcaption,figure,footer,header,hgroup,main,nav,section{display:block}\" +\n          // adds styling not present in IE6/7/8/9\n          \"mark{background:#FF0;color:#000}\" +\n          // hides non-rendered elements\n          \"template{display:none}\"\n      );\n    }\n    if (!supportsUnknownElements) {\n      shivMethods(ownerDocument, data);\n    }\n    return ownerDocument;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The `html5` object is exposed so that more elements can be shived and\n   * existing shiving can be detected on iframes.\n   * @type Object\n   * @example\n   *\n   * // options can be changed before the script is included\n   * html5 = { 'elements': 'mark section', 'shivCSS': false, 'shivMethods': false };\n   */\n  var html5 = {\n    /**\n     * An array or space separated string of node names of the elements to shiv.\n     * @memberOf html5\n     * @type Array|String\n     */\n    elements:\n      options.elements ||\n      \"abbr article aside audio bdi canvas data datalist details dialog figcaption figure footer header hgroup main mark meter nav output picture progress section summary template time video\",\n\n    /**\n     * current version of html5shiv\n     */\n    version: version,\n\n    /**\n     * A flag to indicate that the HTML5 style sheet should be inserted.\n     * @memberOf html5\n     * @type Boolean\n     */\n    shivCSS: options.shivCSS !== false,\n\n    /**\n     * Is equal to true if a browser supports creating unknown/HTML5 elements\n     * @memberOf html5\n     * @type boolean\n     */\n    supportsUnknownElements: supportsUnknownElements,\n\n    /**\n     * A flag to indicate that the document's `createElement` and `createDocumentFragment`\n     * methods should be overwritten.\n     * @memberOf html5\n     * @type Boolean\n     */\n    shivMethods: options.shivMethods !== false,\n\n    /**\n     * A string to describe the type of `html5` object (\"default\" or \"default print\").\n     * @memberOf html5\n     * @type String\n     */\n    type: \"default\",\n\n    // shivs the document according to the specified `html5` object options\n    shivDocument: shivDocument,\n\n    //creates a shived element\n    createElement: createElement,\n\n    //creates a shived documentFragment\n    createDocumentFragment: createDocumentFragment,\n\n    //extends list of elements\n    addElements: addElements\n  };\n\n  /*--------------------------------------------------------------------------*/\n\n  // expose html5\n  window.html5 = html5;\n\n  // shiv the document\n  shivDocument(document);\n\n  if (typeof module == \"object\" && module.exports) {\n    module.exports = html5;\n  }\n})(typeof window !== \"undefined\" ? window : this, document);\n\n/*!\n * @fileOverview TouchSwipe - jQuery Plugin\n * @version 1.6.18\n *\n * @author Matt Bryson http://www.github.com/mattbryson\n * @see https://github.com/mattbryson/TouchSwipe-Jquery-Plugin\n * @see http://labs.rampinteractive.co.uk/touchSwipe/\n * @see http://plugins.jquery.com/project/touchSwipe\n * @license\n * Copyright (c) 2010-2015 Matt Bryson\n * Dual licensed under the MIT or GPL Version 2 licenses.\n *\n */\n!(function (factory) {\n  \"function\" == typeof define && define.amd && define.amd.jQuery\n    ? define([\"jquery\"], factory)\n    : factory(\"undefined\" != typeof module && module.exports ? require(\"jquery\") : jQuery);\n})(function ($) {\n  \"use strict\";\n  function init(options) {\n    return (\n      !options ||\n        void 0 !== options.allowPageScroll ||\n        (void 0 === options.swipe && void 0 === options.swipeStatus) ||\n        (options.allowPageScroll = NONE),\n      void 0 !== options.click && void 0 === options.tap && (options.tap = options.click),\n      options || (options = {}),\n      (options = $.extend({}, $.fn.swipe.defaults, options)),\n      this.each(function () {\n        var $this = $(this),\n          plugin = $this.data(PLUGIN_NS);\n        plugin || ((plugin = new TouchSwipe(this, options)), $this.data(PLUGIN_NS, plugin));\n      })\n    );\n  }\n  function TouchSwipe(element, options) {\n    function touchStart(jqEvent) {\n      if (\n        !(\n          getTouchInProgress() ||\n          $(jqEvent.target).closest(options.excludedElements, $element).length > 0\n        )\n      ) {\n        var event = jqEvent.originalEvent ? jqEvent.originalEvent : jqEvent;\n        if (\n          !event.pointerType ||\n          \"mouse\" != event.pointerType ||\n          0 != options.fallbackToMouseEvents\n        ) {\n          var ret,\n            touches = event.touches,\n            evt = touches ? touches[0] : event;\n          return (\n            (phase = PHASE_START),\n            touches\n              ? (fingerCount = touches.length)\n              : options.preventDefaultEvents !== !1 && jqEvent.preventDefault(),\n            (distance = 0),\n            (direction = null),\n            (currentDirection = null),\n            (pinchDirection = null),\n            (duration = 0),\n            (startTouchesDistance = 0),\n            (endTouchesDistance = 0),\n            (pinchZoom = 1),\n            (pinchDistance = 0),\n            (maximumsMap = createMaximumsData()),\n            cancelMultiFingerRelease(),\n            createFingerData(0, evt),\n            !touches ||\n            fingerCount === options.fingers ||\n            options.fingers === ALL_FINGERS ||\n            hasPinches()\n              ? ((startTime = getTimeStamp()),\n                2 == fingerCount &&\n                  (createFingerData(1, touches[1]),\n                  (startTouchesDistance = endTouchesDistance = calculateTouchesDistance(\n                    fingerData[0].start,\n                    fingerData[1].start\n                  ))),\n                (options.swipeStatus || options.pinchStatus) &&\n                  (ret = triggerHandler(event, phase)))\n              : (ret = !1),\n            ret === !1\n              ? ((phase = PHASE_CANCEL), triggerHandler(event, phase), ret)\n              : (options.hold &&\n                  (holdTimeout = setTimeout(\n                    $.proxy(function () {\n                      $element.trigger(\"hold\", [event.target]),\n                        options.hold && (ret = options.hold.call($element, event, event.target));\n                    }, this),\n                    options.longTapThreshold\n                  )),\n                setTouchInProgress(!0),\n                null)\n          );\n        }\n      }\n    }\n    function touchMove(jqEvent) {\n      var event = jqEvent.originalEvent ? jqEvent.originalEvent : jqEvent;\n      if (phase !== PHASE_END && phase !== PHASE_CANCEL && !inMultiFingerRelease()) {\n        var ret,\n          touches = event.touches,\n          evt = touches ? touches[0] : event,\n          currentFinger = updateFingerData(evt);\n        if (\n          ((endTime = getTimeStamp()),\n          touches && (fingerCount = touches.length),\n          options.hold && clearTimeout(holdTimeout),\n          (phase = PHASE_MOVE),\n          2 == fingerCount &&\n            (0 == startTouchesDistance\n              ? (createFingerData(1, touches[1]),\n                (startTouchesDistance = endTouchesDistance = calculateTouchesDistance(\n                  fingerData[0].start,\n                  fingerData[1].start\n                )))\n              : (updateFingerData(touches[1]),\n                (endTouchesDistance = calculateTouchesDistance(\n                  fingerData[0].end,\n                  fingerData[1].end\n                )),\n                (pinchDirection = calculatePinchDirection(fingerData[0].end, fingerData[1].end))),\n            (pinchZoom = calculatePinchZoom(startTouchesDistance, endTouchesDistance)),\n            (pinchDistance = Math.abs(startTouchesDistance - endTouchesDistance))),\n          fingerCount === options.fingers ||\n            options.fingers === ALL_FINGERS ||\n            !touches ||\n            hasPinches())\n        ) {\n          if (\n            ((direction = calculateDirection(currentFinger.start, currentFinger.end)),\n            (currentDirection = calculateDirection(currentFinger.last, currentFinger.end)),\n            validateDefaultEvent(jqEvent, currentDirection),\n            (distance = calculateDistance(currentFinger.start, currentFinger.end)),\n            (duration = calculateDuration()),\n            setMaxDistance(direction, distance),\n            (ret = triggerHandler(event, phase)),\n            !options.triggerOnTouchEnd || options.triggerOnTouchLeave)\n          ) {\n            var inBounds = !0;\n            if (options.triggerOnTouchLeave) {\n              var bounds = getbounds(this);\n              inBounds = isInBounds(currentFinger.end, bounds);\n            }\n            !options.triggerOnTouchEnd && inBounds\n              ? (phase = getNextPhase(PHASE_MOVE))\n              : options.triggerOnTouchLeave && !inBounds && (phase = getNextPhase(PHASE_END)),\n              (phase != PHASE_CANCEL && phase != PHASE_END) || triggerHandler(event, phase);\n          }\n        } else (phase = PHASE_CANCEL), triggerHandler(event, phase);\n        ret === !1 && ((phase = PHASE_CANCEL), triggerHandler(event, phase));\n      }\n    }\n    function touchEnd(jqEvent) {\n      var event = jqEvent.originalEvent ? jqEvent.originalEvent : jqEvent,\n        touches = event.touches;\n      if (touches) {\n        if (touches.length && !inMultiFingerRelease()) return startMultiFingerRelease(event), !0;\n        if (touches.length && inMultiFingerRelease()) return !0;\n      }\n      return (\n        inMultiFingerRelease() && (fingerCount = fingerCountAtRelease),\n        (endTime = getTimeStamp()),\n        (duration = calculateDuration()),\n        didSwipeBackToCancel() || !validateSwipeDistance()\n          ? ((phase = PHASE_CANCEL), triggerHandler(event, phase))\n          : options.triggerOnTouchEnd || (options.triggerOnTouchEnd === !1 && phase === PHASE_MOVE)\n          ? (options.preventDefaultEvents !== !1 &&\n              jqEvent.cancelable !== !1 &&\n              jqEvent.preventDefault(),\n            (phase = PHASE_END),\n            triggerHandler(event, phase))\n          : !options.triggerOnTouchEnd && hasTap()\n          ? ((phase = PHASE_END), triggerHandlerForGesture(event, phase, TAP))\n          : phase === PHASE_MOVE && ((phase = PHASE_CANCEL), triggerHandler(event, phase)),\n        setTouchInProgress(!1),\n        null\n      );\n    }\n    function touchCancel() {\n      (fingerCount = 0),\n        (endTime = 0),\n        (startTime = 0),\n        (startTouchesDistance = 0),\n        (endTouchesDistance = 0),\n        (pinchZoom = 1),\n        cancelMultiFingerRelease(),\n        setTouchInProgress(!1);\n    }\n    function touchLeave(jqEvent) {\n      var event = jqEvent.originalEvent ? jqEvent.originalEvent : jqEvent;\n      options.triggerOnTouchLeave &&\n        ((phase = getNextPhase(PHASE_END)), triggerHandler(event, phase));\n    }\n    function removeListeners() {\n      $element.unbind(START_EV, touchStart),\n        $element.unbind(CANCEL_EV, touchCancel),\n        $element.unbind(MOVE_EV, touchMove),\n        $element.unbind(END_EV, touchEnd),\n        LEAVE_EV && $element.unbind(LEAVE_EV, touchLeave),\n        setTouchInProgress(!1);\n    }\n    function getNextPhase(currentPhase) {\n      var nextPhase = currentPhase,\n        validTime = validateSwipeTime(),\n        validDistance = validateSwipeDistance(),\n        didCancel = didSwipeBackToCancel();\n      return (\n        !validTime || didCancel\n          ? (nextPhase = PHASE_CANCEL)\n          : !validDistance ||\n            currentPhase != PHASE_MOVE ||\n            (options.triggerOnTouchEnd && !options.triggerOnTouchLeave)\n          ? !validDistance &&\n            currentPhase == PHASE_END &&\n            options.triggerOnTouchLeave &&\n            (nextPhase = PHASE_CANCEL)\n          : (nextPhase = PHASE_END),\n        nextPhase\n      );\n    }\n    function triggerHandler(event, phase) {\n      var ret,\n        touches = event.touches;\n      return (\n        (didSwipe() || hasSwipes()) && (ret = triggerHandlerForGesture(event, phase, SWIPE)),\n        (didPinch() || hasPinches()) &&\n          ret !== !1 &&\n          (ret = triggerHandlerForGesture(event, phase, PINCH)),\n        didDoubleTap() && ret !== !1\n          ? (ret = triggerHandlerForGesture(event, phase, DOUBLE_TAP))\n          : didLongTap() && ret !== !1\n          ? (ret = triggerHandlerForGesture(event, phase, LONG_TAP))\n          : didTap() && ret !== !1 && (ret = triggerHandlerForGesture(event, phase, TAP)),\n        phase === PHASE_CANCEL && touchCancel(event),\n        phase === PHASE_END &&\n          (touches ? touches.length || touchCancel(event) : touchCancel(event)),\n        ret\n      );\n    }\n    function triggerHandlerForGesture(event, phase, gesture) {\n      var ret;\n      if (gesture == SWIPE) {\n        if (\n          ($element.trigger(\"swipeStatus\", [\n            phase,\n            direction || null,\n            distance || 0,\n            duration || 0,\n            fingerCount,\n            fingerData,\n            currentDirection\n          ]),\n          options.swipeStatus &&\n            ((ret = options.swipeStatus.call(\n              $element,\n              event,\n              phase,\n              direction || null,\n              distance || 0,\n              duration || 0,\n              fingerCount,\n              fingerData,\n              currentDirection\n            )),\n            ret === !1))\n        )\n          return !1;\n        if (phase == PHASE_END && validateSwipe()) {\n          if (\n            (clearTimeout(singleTapTimeout),\n            clearTimeout(holdTimeout),\n            $element.trigger(\"swipe\", [\n              direction,\n              distance,\n              duration,\n              fingerCount,\n              fingerData,\n              currentDirection\n            ]),\n            options.swipe &&\n              ((ret = options.swipe.call(\n                $element,\n                event,\n                direction,\n                distance,\n                duration,\n                fingerCount,\n                fingerData,\n                currentDirection\n              )),\n              ret === !1))\n          )\n            return !1;\n          switch (direction) {\n            case LEFT:\n              $element.trigger(\"swipeLeft\", [\n                direction,\n                distance,\n                duration,\n                fingerCount,\n                fingerData,\n                currentDirection\n              ]),\n                options.swipeLeft &&\n                  (ret = options.swipeLeft.call(\n                    $element,\n                    event,\n                    direction,\n                    distance,\n                    duration,\n                    fingerCount,\n                    fingerData,\n                    currentDirection\n                  ));\n              break;\n            case RIGHT:\n              $element.trigger(\"swipeRight\", [\n                direction,\n                distance,\n                duration,\n                fingerCount,\n                fingerData,\n                currentDirection\n              ]),\n                options.swipeRight &&\n                  (ret = options.swipeRight.call(\n                    $element,\n                    event,\n                    direction,\n                    distance,\n                    duration,\n                    fingerCount,\n                    fingerData,\n                    currentDirection\n                  ));\n              break;\n            case UP:\n              $element.trigger(\"swipeUp\", [\n                direction,\n                distance,\n                duration,\n                fingerCount,\n                fingerData,\n                currentDirection\n              ]),\n                options.swipeUp &&\n                  (ret = options.swipeUp.call(\n                    $element,\n                    event,\n                    direction,\n                    distance,\n                    duration,\n                    fingerCount,\n                    fingerData,\n                    currentDirection\n                  ));\n              break;\n            case DOWN:\n              $element.trigger(\"swipeDown\", [\n                direction,\n                distance,\n                duration,\n                fingerCount,\n                fingerData,\n                currentDirection\n              ]),\n                options.swipeDown &&\n                  (ret = options.swipeDown.call(\n                    $element,\n                    event,\n                    direction,\n                    distance,\n                    duration,\n                    fingerCount,\n                    fingerData,\n                    currentDirection\n                  ));\n          }\n        }\n      }\n      if (gesture == PINCH) {\n        if (\n          ($element.trigger(\"pinchStatus\", [\n            phase,\n            pinchDirection || null,\n            pinchDistance || 0,\n            duration || 0,\n            fingerCount,\n            pinchZoom,\n            fingerData\n          ]),\n          options.pinchStatus &&\n            ((ret = options.pinchStatus.call(\n              $element,\n              event,\n              phase,\n              pinchDirection || null,\n              pinchDistance || 0,\n              duration || 0,\n              fingerCount,\n              pinchZoom,\n              fingerData\n            )),\n            ret === !1))\n        )\n          return !1;\n        if (phase == PHASE_END && validatePinch())\n          switch (pinchDirection) {\n            case IN:\n              $element.trigger(\"pinchIn\", [\n                pinchDirection || null,\n                pinchDistance || 0,\n                duration || 0,\n                fingerCount,\n                pinchZoom,\n                fingerData\n              ]),\n                options.pinchIn &&\n                  (ret = options.pinchIn.call(\n                    $element,\n                    event,\n                    pinchDirection || null,\n                    pinchDistance || 0,\n                    duration || 0,\n                    fingerCount,\n                    pinchZoom,\n                    fingerData\n                  ));\n              break;\n            case OUT:\n              $element.trigger(\"pinchOut\", [\n                pinchDirection || null,\n                pinchDistance || 0,\n                duration || 0,\n                fingerCount,\n                pinchZoom,\n                fingerData\n              ]),\n                options.pinchOut &&\n                  (ret = options.pinchOut.call(\n                    $element,\n                    event,\n                    pinchDirection || null,\n                    pinchDistance || 0,\n                    duration || 0,\n                    fingerCount,\n                    pinchZoom,\n                    fingerData\n                  ));\n          }\n      }\n      return (\n        gesture == TAP\n          ? (phase !== PHASE_CANCEL && phase !== PHASE_END) ||\n            (clearTimeout(singleTapTimeout),\n            clearTimeout(holdTimeout),\n            hasDoubleTap() && !inDoubleTap()\n              ? ((doubleTapStartTime = getTimeStamp()),\n                (singleTapTimeout = setTimeout(\n                  $.proxy(function () {\n                    (doubleTapStartTime = null),\n                      $element.trigger(\"tap\", [event.target]),\n                      options.tap && (ret = options.tap.call($element, event, event.target));\n                  }, this),\n                  options.doubleTapThreshold\n                )))\n              : ((doubleTapStartTime = null),\n                $element.trigger(\"tap\", [event.target]),\n                options.tap && (ret = options.tap.call($element, event, event.target))))\n          : gesture == DOUBLE_TAP\n          ? (phase !== PHASE_CANCEL && phase !== PHASE_END) ||\n            (clearTimeout(singleTapTimeout),\n            clearTimeout(holdTimeout),\n            (doubleTapStartTime = null),\n            $element.trigger(\"doubletap\", [event.target]),\n            options.doubleTap && (ret = options.doubleTap.call($element, event, event.target)))\n          : gesture == LONG_TAP &&\n            ((phase !== PHASE_CANCEL && phase !== PHASE_END) ||\n              (clearTimeout(singleTapTimeout),\n              (doubleTapStartTime = null),\n              $element.trigger(\"longtap\", [event.target]),\n              options.longTap && (ret = options.longTap.call($element, event, event.target)))),\n        ret\n      );\n    }\n    function validateSwipeDistance() {\n      var valid = !0;\n      return null !== options.threshold && (valid = distance >= options.threshold), valid;\n    }\n    function didSwipeBackToCancel() {\n      var cancelled = !1;\n      return (\n        null !== options.cancelThreshold &&\n          null !== direction &&\n          (cancelled = getMaxDistance(direction) - distance >= options.cancelThreshold),\n        cancelled\n      );\n    }\n    function validatePinchDistance() {\n      return null === options.pinchThreshold || pinchDistance >= options.pinchThreshold;\n    }\n    function validateSwipeTime() {\n      var result;\n      return (result = !options.maxTimeThreshold || !(duration >= options.maxTimeThreshold));\n    }\n    function validateDefaultEvent(jqEvent, direction) {\n      if (options.preventDefaultEvents !== !1)\n        if (options.allowPageScroll === NONE) jqEvent.preventDefault();\n        else {\n          var auto = options.allowPageScroll === AUTO;\n          switch (direction) {\n            case LEFT:\n              ((options.swipeLeft && auto) || (!auto && options.allowPageScroll != HORIZONTAL)) &&\n                jqEvent.preventDefault();\n              break;\n            case RIGHT:\n              ((options.swipeRight && auto) || (!auto && options.allowPageScroll != HORIZONTAL)) &&\n                jqEvent.preventDefault();\n              break;\n            case UP:\n              ((options.swipeUp && auto) || (!auto && options.allowPageScroll != VERTICAL)) &&\n                jqEvent.preventDefault();\n              break;\n            case DOWN:\n              ((options.swipeDown && auto) || (!auto && options.allowPageScroll != VERTICAL)) &&\n                jqEvent.preventDefault();\n              break;\n            case NONE:\n          }\n        }\n    }\n    function validatePinch() {\n      var hasCorrectFingerCount = validateFingers(),\n        hasEndPoint = validateEndPoint(),\n        hasCorrectDistance = validatePinchDistance();\n      return hasCorrectFingerCount && hasEndPoint && hasCorrectDistance;\n    }\n    function hasPinches() {\n      return !!(options.pinchStatus || options.pinchIn || options.pinchOut);\n    }\n    function didPinch() {\n      return !(!validatePinch() || !hasPinches());\n    }\n    function validateSwipe() {\n      var hasValidTime = validateSwipeTime(),\n        hasValidDistance = validateSwipeDistance(),\n        hasCorrectFingerCount = validateFingers(),\n        hasEndPoint = validateEndPoint(),\n        didCancel = didSwipeBackToCancel(),\n        valid =\n          !didCancel && hasEndPoint && hasCorrectFingerCount && hasValidDistance && hasValidTime;\n      return valid;\n    }\n    function hasSwipes() {\n      return !!(\n        options.swipe ||\n        options.swipeStatus ||\n        options.swipeLeft ||\n        options.swipeRight ||\n        options.swipeUp ||\n        options.swipeDown\n      );\n    }\n    function didSwipe() {\n      return !(!validateSwipe() || !hasSwipes());\n    }\n    function validateFingers() {\n      return fingerCount === options.fingers || options.fingers === ALL_FINGERS || !SUPPORTS_TOUCH;\n    }\n    function validateEndPoint() {\n      return 0 !== fingerData[0].end.x;\n    }\n    function hasTap() {\n      return !!options.tap;\n    }\n    function hasDoubleTap() {\n      return !!options.doubleTap;\n    }\n    function hasLongTap() {\n      return !!options.longTap;\n    }\n    function validateDoubleTap() {\n      if (null == doubleTapStartTime) return !1;\n      var now = getTimeStamp();\n      return hasDoubleTap() && now - doubleTapStartTime <= options.doubleTapThreshold;\n    }\n    function inDoubleTap() {\n      return validateDoubleTap();\n    }\n    function validateTap() {\n      return (\n        (1 === fingerCount || !SUPPORTS_TOUCH) && (isNaN(distance) || distance < options.threshold)\n      );\n    }\n    function validateLongTap() {\n      return duration > options.longTapThreshold && distance < DOUBLE_TAP_THRESHOLD;\n    }\n    function didTap() {\n      return !(!validateTap() || !hasTap());\n    }\n    function didDoubleTap() {\n      return !(!validateDoubleTap() || !hasDoubleTap());\n    }\n    function didLongTap() {\n      return !(!validateLongTap() || !hasLongTap());\n    }\n    function startMultiFingerRelease(event) {\n      (previousTouchEndTime = getTimeStamp()), (fingerCountAtRelease = event.touches.length + 1);\n    }\n    function cancelMultiFingerRelease() {\n      (previousTouchEndTime = 0), (fingerCountAtRelease = 0);\n    }\n    function inMultiFingerRelease() {\n      var withinThreshold = !1;\n      if (previousTouchEndTime) {\n        var diff = getTimeStamp() - previousTouchEndTime;\n        diff <= options.fingerReleaseThreshold && (withinThreshold = !0);\n      }\n      return withinThreshold;\n    }\n    function getTouchInProgress() {\n      return !($element.data(PLUGIN_NS + \"_intouch\") !== !0);\n    }\n    function setTouchInProgress(val) {\n      $element &&\n        (val === !0\n          ? ($element.bind(MOVE_EV, touchMove),\n            $element.bind(END_EV, touchEnd),\n            LEAVE_EV && $element.bind(LEAVE_EV, touchLeave))\n          : ($element.unbind(MOVE_EV, touchMove, !1),\n            $element.unbind(END_EV, touchEnd, !1),\n            LEAVE_EV && $element.unbind(LEAVE_EV, touchLeave, !1)),\n        $element.data(PLUGIN_NS + \"_intouch\", val === !0));\n    }\n    function createFingerData(id, evt) {\n      var f = { start: { x: 0, y: 0 }, last: { x: 0, y: 0 }, end: { x: 0, y: 0 } };\n      return (\n        (f.start.x = f.last.x = f.end.x = evt.pageX || evt.clientX),\n        (f.start.y = f.last.y = f.end.y = evt.pageY || evt.clientY),\n        (fingerData[id] = f),\n        f\n      );\n    }\n    function updateFingerData(evt) {\n      var id = void 0 !== evt.identifier ? evt.identifier : 0,\n        f = getFingerData(id);\n      return (\n        null === f && (f = createFingerData(id, evt)),\n        (f.last.x = f.end.x),\n        (f.last.y = f.end.y),\n        (f.end.x = evt.pageX || evt.clientX),\n        (f.end.y = evt.pageY || evt.clientY),\n        f\n      );\n    }\n    function getFingerData(id) {\n      return fingerData[id] || null;\n    }\n    function setMaxDistance(direction, distance) {\n      direction != NONE &&\n        ((distance = Math.max(distance, getMaxDistance(direction))),\n        (maximumsMap[direction].distance = distance));\n    }\n    function getMaxDistance(direction) {\n      if (maximumsMap[direction]) return maximumsMap[direction].distance;\n    }\n    function createMaximumsData() {\n      var maxData = {};\n      return (\n        (maxData[LEFT] = createMaximumVO(LEFT)),\n        (maxData[RIGHT] = createMaximumVO(RIGHT)),\n        (maxData[UP] = createMaximumVO(UP)),\n        (maxData[DOWN] = createMaximumVO(DOWN)),\n        maxData\n      );\n    }\n    function createMaximumVO(dir) {\n      return { direction: dir, distance: 0 };\n    }\n    function calculateDuration() {\n      return endTime - startTime;\n    }\n    function calculateTouchesDistance(startPoint, endPoint) {\n      var diffX = Math.abs(startPoint.x - endPoint.x),\n        diffY = Math.abs(startPoint.y - endPoint.y);\n      return Math.round(Math.sqrt(diffX * diffX + diffY * diffY));\n    }\n    function calculatePinchZoom(startDistance, endDistance) {\n      var percent = (endDistance / startDistance) * 1;\n      return percent.toFixed(2);\n    }\n    function calculatePinchDirection() {\n      return pinchZoom < 1 ? OUT : IN;\n    }\n    function calculateDistance(startPoint, endPoint) {\n      return Math.round(\n        Math.sqrt(Math.pow(endPoint.x - startPoint.x, 2) + Math.pow(endPoint.y - startPoint.y, 2))\n      );\n    }\n    function calculateAngle(startPoint, endPoint) {\n      var x = startPoint.x - endPoint.x,\n        y = endPoint.y - startPoint.y,\n        r = Math.atan2(y, x),\n        angle = Math.round((180 * r) / Math.PI);\n      return angle < 0 && (angle = 360 - Math.abs(angle)), angle;\n    }\n    function calculateDirection(startPoint, endPoint) {\n      if (comparePoints(startPoint, endPoint)) return NONE;\n      var angle = calculateAngle(startPoint, endPoint);\n      return angle <= 45 && angle >= 0\n        ? LEFT\n        : angle <= 360 && angle >= 315\n        ? LEFT\n        : angle >= 135 && angle <= 225\n        ? RIGHT\n        : angle > 45 && angle < 135\n        ? DOWN\n        : UP;\n    }\n    function getTimeStamp() {\n      var now = new Date();\n      return now.getTime();\n    }\n    function getbounds(el) {\n      el = $(el);\n      var offset = el.offset(),\n        bounds = {\n          left: offset.left,\n          right: offset.left + el.outerWidth(),\n          top: offset.top,\n          bottom: offset.top + el.outerHeight()\n        };\n      return bounds;\n    }\n    function isInBounds(point, bounds) {\n      return (\n        point.x > bounds.left &&\n        point.x < bounds.right &&\n        point.y > bounds.top &&\n        point.y < bounds.bottom\n      );\n    }\n    function comparePoints(pointA, pointB) {\n      return pointA.x == pointB.x && pointA.y == pointB.y;\n    }\n    var options = $.extend({}, options),\n      useTouchEvents = SUPPORTS_TOUCH || SUPPORTS_POINTER || !options.fallbackToMouseEvents,\n      START_EV = useTouchEvents\n        ? SUPPORTS_POINTER\n          ? SUPPORTS_POINTER_IE10\n            ? \"MSPointerDown\"\n            : \"pointerdown\"\n          : \"touchstart\"\n        : \"mousedown\",\n      MOVE_EV = useTouchEvents\n        ? SUPPORTS_POINTER\n          ? SUPPORTS_POINTER_IE10\n            ? \"MSPointerMove\"\n            : \"pointermove\"\n          : \"touchmove\"\n        : \"mousemove\",\n      END_EV = useTouchEvents\n        ? SUPPORTS_POINTER\n          ? SUPPORTS_POINTER_IE10\n            ? \"MSPointerUp\"\n            : \"pointerup\"\n          : \"touchend\"\n        : \"mouseup\",\n      LEAVE_EV = useTouchEvents ? (SUPPORTS_POINTER ? \"mouseleave\" : null) : \"mouseleave\",\n      CANCEL_EV = SUPPORTS_POINTER\n        ? SUPPORTS_POINTER_IE10\n          ? \"MSPointerCancel\"\n          : \"pointercancel\"\n        : \"touchcancel\",\n      distance = 0,\n      direction = null,\n      currentDirection = null,\n      duration = 0,\n      startTouchesDistance = 0,\n      endTouchesDistance = 0,\n      pinchZoom = 1,\n      pinchDistance = 0,\n      pinchDirection = 0,\n      maximumsMap = null,\n      $element = $(element),\n      phase = \"start\",\n      fingerCount = 0,\n      fingerData = {},\n      startTime = 0,\n      endTime = 0,\n      previousTouchEndTime = 0,\n      fingerCountAtRelease = 0,\n      doubleTapStartTime = 0,\n      singleTapTimeout = null,\n      holdTimeout = null;\n    try {\n      $element.bind(START_EV, touchStart), $element.bind(CANCEL_EV, touchCancel);\n    } catch (e) {\n      $.error(\"events not supported \" + START_EV + \",\" + CANCEL_EV + \" on jQuery.swipe\");\n    }\n    (this.enable = function () {\n      return (\n        this.disable(),\n        $element.bind(START_EV, touchStart),\n        $element.bind(CANCEL_EV, touchCancel),\n        $element\n      );\n    }),\n      (this.disable = function () {\n        return removeListeners(), $element;\n      }),\n      (this.destroy = function () {\n        removeListeners(), $element.data(PLUGIN_NS, null), ($element = null);\n      }),\n      (this.option = function (property, value) {\n        if (\"object\" == typeof property) options = $.extend(options, property);\n        else if (void 0 !== options[property]) {\n          if (void 0 === value) return options[property];\n          options[property] = value;\n        } else {\n          if (!property) return options;\n          $.error(\"Option \" + property + \" does not exist on jQuery.swipe.options\");\n        }\n        return null;\n      });\n  }\n  var VERSION = \"1.6.18\",\n    LEFT = \"left\",\n    RIGHT = \"right\",\n    UP = \"up\",\n    DOWN = \"down\",\n    IN = \"in\",\n    OUT = \"out\",\n    NONE = \"none\",\n    AUTO = \"auto\",\n    SWIPE = \"swipe\",\n    PINCH = \"pinch\",\n    TAP = \"tap\",\n    DOUBLE_TAP = \"doubletap\",\n    LONG_TAP = \"longtap\",\n    HORIZONTAL = \"horizontal\",\n    VERTICAL = \"vertical\",\n    ALL_FINGERS = \"all\",\n    DOUBLE_TAP_THRESHOLD = 10,\n    PHASE_START = \"start\",\n    PHASE_MOVE = \"move\",\n    PHASE_END = \"end\",\n    PHASE_CANCEL = \"cancel\",\n    SUPPORTS_TOUCH = \"ontouchstart\" in window,\n    SUPPORTS_POINTER_IE10 =\n      window.navigator.msPointerEnabled && !window.navigator.pointerEnabled && !SUPPORTS_TOUCH,\n    SUPPORTS_POINTER =\n      (window.navigator.pointerEnabled || window.navigator.msPointerEnabled) && !SUPPORTS_TOUCH,\n    PLUGIN_NS = \"TouchSwipe\",\n    defaults = {\n      fingers: 1,\n      threshold: 75,\n      cancelThreshold: null,\n      pinchThreshold: 20,\n      maxTimeThreshold: null,\n      fingerReleaseThreshold: 250,\n      longTapThreshold: 500,\n      doubleTapThreshold: 200,\n      swipe: null,\n      swipeLeft: null,\n      swipeRight: null,\n      swipeUp: null,\n      swipeDown: null,\n      swipeStatus: null,\n      pinchIn: null,\n      pinchOut: null,\n      pinchStatus: null,\n      click: null,\n      tap: null,\n      doubleTap: null,\n      longTap: null,\n      hold: null,\n      triggerOnTouchEnd: !0,\n      triggerOnTouchLeave: !1,\n      allowPageScroll: \"auto\",\n      fallbackToMouseEvents: !0,\n      excludedElements: \".noSwipe\",\n      preventDefaultEvents: !0\n    };\n  ($.fn.swipe = function (method) {\n    var $this = $(this),\n      plugin = $this.data(PLUGIN_NS);\n    if (plugin && \"string\" == typeof method) {\n      if (plugin[method])\n        return plugin[method].apply(plugin, Array.prototype.slice.call(arguments, 1));\n      $.error(\"Method \" + method + \" does not exist on jQuery.swipe\");\n    } else if (plugin && \"object\" == typeof method) plugin.option.apply(plugin, arguments);\n    else if (!(plugin || (\"object\" != typeof method && method))) return init.apply(this, arguments);\n    return $this;\n  }),\n    ($.fn.swipe.version = VERSION),\n    ($.fn.swipe.defaults = defaults),\n    ($.fn.swipe.phases = {\n      PHASE_START: PHASE_START,\n      PHASE_MOVE: PHASE_MOVE,\n      PHASE_END: PHASE_END,\n      PHASE_CANCEL: PHASE_CANCEL\n    }),\n    ($.fn.swipe.directions = { LEFT: LEFT, RIGHT: RIGHT, UP: UP, DOWN: DOWN, IN: IN, OUT: OUT }),\n    ($.fn.swipe.pageScroll = {\n      NONE: NONE,\n      HORIZONTAL: HORIZONTAL,\n      VERTICAL: VERTICAL,\n      AUTO: AUTO\n    }),\n    ($.fn.swipe.fingers = { ONE: 1, TWO: 2, THREE: 3, FOUR: 4, FIVE: 5, ALL: ALL_FINGERS });\n});\n","// smooth anchor scroll\n$(document).on(\"click\", 'a[href^=\"#\"]', function (event) {\n  event.preventDefault();\n\n  $(\"html, body\").animate(\n    {\n      scrollTop: $($.attr(this, \"href\")).offset().top\n    },\n    1000\n  );\n});\n\n// burger menu\n/*\n(function () {\n  var burgerIcon = document.querySelector(\".burger-container\"),\n    burgerMenu = document.querySelector(\".burger-menu\");\n\n  burgerIcon.onclick = function () {\n    burgerMenu.classList.toggle(\"burger-opened\");\n    burgerIcon.classList.toggle(\"burger-close\");\n  };\n})();\n*/\n$(\n  (function () {\n    var $burgerContainer = $(\".burger-container\");\n    var $burgerIcon = $(\".burger-icon\");\n    var $burgerMenu = $(\".burger-menu\");\n\n    $burgerIcon.click(function () {\n      $burgerMenu.toggleClass(\"burger-opened\");\n      $burgerContainer.toggleClass(\"burger-close\");\n\n      if ($burgerIcon.hasClass(\"burger-close\") == true) {\n        $(\".go-to-top\").css(\"display\", \"none\");\n      } else {\n        $(\".go-to-top\").css(\"display\", \"block\");\n      }\n    });\n\n    $burgerContainer.swipe({\n      swipeLeft: function (event, direction, distance, duration, fingerCount) {\n        $(\".burger-menu\").addClass(\"burger-opened\");\n        $(\".burger-container\").addClass(\"burger-close\");\n      }\n    });\n    $burgerMenu.swipe({\n      swipeRight: function (event, direction, distance, duration, fingerCount) {\n        $(\".burger-menu\").removeClass(\"burger-opened\");\n        $(\".burger-container\").removeClass(\"burger-close\");\n      }\n    });\n  })()\n);\n\n// dropDown menu show/hide\n/*\n(function () {\n  var dropMenuIcon = document.querySelector(\".dropMenu-toggle\"),\n    dropMenu = document.querySelector(\".nav\");\n\n  dropMenuIcon.onclick = function () {\n    dropMenu.classList.toggle(\"dropMenu-show\");\n    dropMenuIcon.classList.toggle(\"dropMenu-hide\");\n  };\n})();\n*/\n\n$(\n  (function () {\n    var $dropMenuIcon = $(\".dropMenu-toggle\");\n    var $dropMenu = $(\".nav\");\n\n    $dropMenuIcon.click(function () {\n      $dropMenu.toggleClass(\"dropMenu-show\");\n      $dropMenuIcon.toggleClass(\"dropMenu-hide\");\n    });\n  })()\n);\n\n// slide down menu\n\n/*\n$(window).scroll(function() {scrollFunction()});\n\nfunction scrollFunction() {\n\tif (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {\n\t\tdocument.querySelector(\".dropMenu-toggle\").style.top = \"0\";\n\t\tdocument.querySelector(\".dropMenu-toggle\").style.display = \"block\";\n\n\t} else {\n\t\tdocument.querySelector(\".dropMenu-toggle\").style.top = \"-50px\";\n\t\tdocument.querySelector(\".nav\").classList.remove(\"dropMenu-show\");\n\t}\n}\n*/\n\n$(window).scroll(function () {\n  scrollFunction();\n});\n\nfunction scrollFunction() {\n  if ($(\"body\").scrollTop() > 100 || $(document.documentElement).scrollTop() > 100) {\n    $(\".dropMenu-toggle\").css({\n      top: \"0\",\n      display: \"block\"\n    });\n    $(\".dropMenu-toggle__icon\").css(\"display\", \"block\");\n  } else {\n    $(\".dropMenu-toggle\").css({\n      top: \"-50\"\n    });\n    $(\".dropMenu-toggle__icon\").css(\"display\", \"none\");\n    $(\".nav\").removeClass(\"dropMenu-show\");\n  }\n}\n\n// menu hide after click to link\n\n$(document).ready(function () {\n  $(\".dropdown-nav-menu__link\").click(function () {\n    if ($(\".nav\").hasClass(\"dropMenu-show\")) {\n      $(\".nav\").removeClass(\"dropMenu-show\");\n    }\n  });\n  $(\".nav-burger__link\").click(function () {\n    if (\n      $(\".burger-menu\").hasClass(\"burger-opened\") ||\n      $(\".burger-container\").hasClass(\"burger-close\")\n    ) {\n      $(\".burger-menu\").removeClass(\"burger-opened\");\n      $(\".burger-container\").removeClass(\"burger-close\");\n    }\n  });\n});\n\n// skills circle progress\n\nfunction circle(el) {\n  $(el)\n    .circleProgress({ fill: { color: \"#828282\" } })\n    .on(\"circle-animation-progress\", function (event, progress, stepValue) {\n      $(this)\n        .find(\".skills__percent\")\n        .text(String(stepValue.toFixed(2)).substr(2) + \"%\");\n    });\n\n  // function scrollTracking(){\n  //     var wt = $(window).scrollTop();\n  //     var wh = $(window).height();\n  //     var et = $(\".skills__wrap\").offset().top;\n  //     var eh = $(\".skills__wrap\").outerHeight();\n  //\n  //     if (et >= wt && et + eh <= wh + wt){\n  //         if (block_show == null || block_show == false) {\n  //             $(\".skills__percent\").show;\n  //         }\n  //         block_show = true;\n  //     }\n  //     else {\n  //         if (block_show == null || block_show == true) {\n  //             $(\".skills__percent\").hide;\n  //         }\n  //\n  //         block_show = false;\n  //     }\n  // }\n  //\n  // $(window).scroll(function(){\n  //     scrollTracking();\n  // });\n  //\n  // $(document).ready(function(){\n  //     scrollTracking();\n  // });\n}\ncircle(\".skills__round\");\n\n$(\".skills__round\").circleProgress({\n  startAngle: Math.PI / -2\n});\n"]}